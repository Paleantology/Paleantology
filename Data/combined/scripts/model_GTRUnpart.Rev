#####################################
# GTR+G nucleotide substitution model #
#####################################
# Initialize the parameters of substitution matrix #
# Both the stationary frequencies and exchangeability rates #
# are drawn from uniform Dirichlet distributions #

# First the stationary frequencies #
sf_hp <- v(1.0,1.0,1.0,1.0)
sf ~ dnDirichlet(sf_hp)

# Then the exchangeability rates #
    er_prior <- v(1,1,1,1,1,1)
    er ~ dnDirichlet(er_prior)

moves[mvi++] = mvSimplexElementScale(er, alpha=10.0, weight=5.0)
moves[mvi++] = mvSimplexElementScale(sf, alpha=10.0, weight=5.0)

# Create the matrix #
Q_mol := fnGTR(er,sf)

# Create a discretized gamma distribution of rate categories  #
# the shape parameter is drawn from an exponential prior #
alpha_cytb ~ dnExponential( 1.0 )

moves[mvi++] = mvScale(alpha_cytb, lambda=0.01, weight=1.0)
moves[mvi++] = mvScale(alpha_cytb, lambda=0.1,  weight=1.0)
moves[mvi++] = mvScale(alpha_cytb, lambda=1,    weight=1.0)

rates_cytb := fnDiscretizeGamma( alpha_cytb, alpha_cytb, 4 )


    # the probability of a site being invariable
    pinvar ~ dnBeta(1,1)
    moves[mvi++] = mvScale(pinvar, lambda=0.1, tune=true, weight=2.0)
    moves[mvi++] = mvSlide(pinvar, delta=0.1, tune=true, weight=2.0)


##############
# Tree model #
##############

# construct a variable for the tree drawn from a birth death process
topology ~ dnUniformTopology(taxa=taxa)

# add topology Metropolis-Hastings moves
moves[mvi++] = mvNNI(topology, weight=1.0)
moves[mvi++] = mvSPR(topology, weight=1.0)

# create branch length vector and add moves
for (i in 1:n_branches) {
   br_lens[i] ~ dnExponential(10.0)
   moves[mvi++] = mvScale(br_lens[i])
}

# add deterministic node to monitor tree length
TL := sum(br_lens)

# unite topology and branch length vector into phylogeny object
psi := treeAssembly(topology, br_lens)

###################
# PhyloCTMC Model #
###################

# the sequence evolution model
phyloSeq ~ dnPhyloCTMC(tree=topology, Q=Q_mol, siteRates=rates_cytb, pInv=pinvar, type="DNA")
phyloSeq.clamp(data)


